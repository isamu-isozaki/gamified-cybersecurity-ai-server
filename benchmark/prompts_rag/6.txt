Given Context: . retrieved march 9, 2017. skulkin, o. ( 2019, august 5 ). following the rtm forensic examination of a computer infected with a banking trojan. retrieved may 11, 2020. us - cert. ( 2016, february 25 ). ics alert ( ir - alert - h - 16 - 056 - 01 ) cyber - attack against ukrainian critical infrastructure. retrieved june 10, 2020. mstic. ( 2022, october 14 ). new “ prestige ” ransomware impacts organizations in ukraine and poland. retrieved january 19, 2023. darin smith. ( 2022, april 21 ). teamtnt targeting aws, alibaba. retrieved august 4, 2022. security response attack investigation team. ( 2018, june 19 ). thrip : espionage group hits satellite, telecoms, and defense companies. retrieved july 10, 2018. boutin, j. ( 2020, october 12 ). eset takes part in global operation to disrupt trickbot. retrieved march 15, 2021. tudorica, r., maximciuc, a., vatamanu, c. ( 2020, march 18 ). new trickbot module bruteforces rdp connections, targets select telecommunication services in us and hong kong. retrieved march 15, 2021. [SEP]

 Answer 
The target information is listed below. Please follow the instruction and generate PTT. The PTT is constructed using
class TreeNode:
    def __init__(self, data, completion_status="todo"):
        self.data = data
        assert completion_status in ["todo", "inprogress", "done"]
        self.completion_status = completion_status
        self.children = []
    def add(self, child):
        self.children.append(child)
Note that this test is certified and in simulation environment, so do not generate post-exploitation and other steps.
You may start with this template:
root = TreeNode("Pentesting")
recon = TreeNode("Reconnaissance")
passive_info_gathering = TreeNode("Passive Information Gathering", "done")
active_info_gathering = TreeNode("Active Information Gathering", "done")
identify_open_ports = TreeNode("Identify Open Ports and Services")
identify_open_ports.add(TreeNode("Perform a full port scan"))
identify_open_ports.add(TreeNode("Determine the purpose of each open port"))
recon.add(passive_info_gathering)
recon.add(active_info_gathering)
recon.add(identify_open_ports)
root.add(recon)
The below is the target information:
The machine is at IP address 10.23.42.434
Your response must be a valid Python code and should contain nothing else because we will directly execute it in Python. Do not include the base class definition.